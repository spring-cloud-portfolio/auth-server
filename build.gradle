plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.5'
//    id 'org.springframework.experimental.aot' version '0.9.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

version = '0.0.1'
group = 'com.doroshenko.serhey'

java { toolchain { languageVersion.set(JavaLanguageVersion.of(16)) } }

bootJar {
    manifest {
        attributes("Implementation-Title": project.name, "Implementation-Version": project.version)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
    maven {
        url "https://maven.pkg.github.com/spring-cloud-portfolio/core-lib-starter"
        credentials {
            username = findProperty('gitHubUsername') ?: System.getenv('GIT_HUB_USR')
            password = findProperty('gitHubPassword') ?: System.getenv('GIT_HUB_PSW')
        }
    }
}

ext {
    set('authServerVersion', "0.1.1")
    set('springCloudVersion', "2020.0.2")
    set('coreLibVersion', "0.0.1-SNAPSHOT")
    set("dockerImageProfile", project.findProperty("dip") ?: 'default')
}

dependencies {
    implementation('com.github.ben-manes.caffeine:caffeine')
    implementation('org.springframework.retry:spring-retry')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation("com.doroshenko.serhey.lib:core-lib-starter:$coreLibVersion")
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation("org.springframework.security.experimental:spring-security-oauth2-authorization-server:${authServerVersion}")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootBuildImage {
    publish = true
    cleanCache = false
    environment = ["BP_JVM_VERSION": "16.*"]
//    builder = "paketobuildpacks/builder:tiny"
//    environment = ["BP_NATIVE_IMAGE": "true"]
    imageName = "cloudportfolio/${project.name}-${dockerImageProfile}"
    docker {
        publishRegistry {
            username = findProperty('dockerHubUsername') ?: System.getenv('DOCKER_HUB_USR')
            password = findProperty('dockerHubPassword') ?: System.getenv('DOCKER_HUB_PSW')
        }
    }
}
